#!/bin/bash
usage() {
  cat <<EOF
$(basename "$0") generates manifest files required by openshift-installer for Power VS.

IC_API_KEY, IBMCLOUD_API_KEY, BM_API_KEY or BLUEMIX_API_KEY environmental variables must be set.

Options:
  --credreqs          Path to the directory where the credential 
                      requests will be stored.
  --log               Path to a file where the log generated by 
                      $(basename "$0") should be stored.

  --name              Service id name

  --pullSecret        Path to the file containing your RedHat pull
                      secret

  --rg                Resource group applicable to the manifests.



EOF
}
KEYSET='false'
RESOURCE_GROUP=""
PULLSECRET="${HOME}/.pull-secret"
CREDREQS="./credreqs"
SERVICEID_NAME="$(whoami)-service-id"
LOGFILE="./.ccoctl.log"
if [[ -z $(command -v openshift-install) ]];then
        echo "openshift-install binary must be present in PATH"
        exit
fi
declare -a ENV_VARS
ENV_VARS=( "IC_API_KEY" "IBMCLOUD_API_KEY" "BM_API_KEY" "BLUEMIX_API_KEY" )
for VAR in ${ENV_VARS[@]}
do
        if [[ -v ${VAR} ]]
        then
  VALUE=$(eval "echo \"\${${VAR}}\"")
    if [[ -n "${VALUE}" ]]
    then
      KEYSET='true'
    break
    fi
        fi
done
while [ $# -gt 0 ]; do
  case $1 in
    --credreqs)
        CREDREQS="${2:-}"
        shift
        ;;
    --log)
        LOGFILE="${2:-}"
        shift
        ;;
    --name)
        SERVICEID_NAME="${2:-}"
        shift
        ;;
    --pullSecret)
        PULLSECRET="${2:-}"
        shift
      ;;
    --rg)
        RESOURCE_GROUP="${2:-}"
        shift
        ;;
    --help)
      usage
      exit
      ;;
    *)
        echo "Flag '$1' is not supported." 2>&1 | tee -a "${LOGFILE}"
        exit 1
        ;;
  esac
  shift
done
if [[ "${KEYSET}" == 'false' ]];then
  echo "Error: [IC_API_KEY IBMCLOUD_API_KEY BM_API_KEY BLUEMIX_API_KEY] environment variable not set" 2>&1 | tee -a "${LOGFILE}"
  exit 1
fi
if [[ -z "${RESOURCE_GROUP}" ]]; then
  echo "WARNING: --rg is not set. The cluster will have access to all resource groups" | tee -a "${LOGFILE}"
fi
echo "Using openshift-install version $(openshift-install version)" 2>&1 | tee -a "${LOGFILE}"
RELEASE_IMAGE=$(openshift-install version | awk '/release image/ {print $3}')
echo "Using pull secret from ${PULLSECRET} to extract CCO image" 2>&1 | tee "${LOGFILE}"
CCO_IMAGE=$(oc adm release info --image-for='cloud-credential-operator' $RELEASE_IMAGE -a "${PULLSECRET}")
oc image extract $CCO_IMAGE --file="/usr/bin/ccoctl" -a "${PULLSECRET}"
echo "CCO Image extracted" 2>&1 | tee -a "${LOGFILE}"
chmod 775 ./ccoctl
echo "Storing credentials requests in ${CREDREQS}" 2>&1 | tee -a "${LOGFILE}"
mkdir ${CREDREQS}
echo "Creating credential requests" 2>&1 | tee -a "${LOGFILE}"
oc adm release extract --cloud=powervs --credentials-requests $RELEASE_IMAGE --to="${CREDREQS}"
echo "Extracting cloud credentials with service id name: ${SERVICEID_NAME}" 2>&1 | tee -a "${LOGFILE}"
./ccoctl ibmcloud create-service-id --credentials-requests-dir "${CREDREQS}" --name "${SERVICEID_NAME}" --resource-group-name "${RESOURCE_GROUP}"
